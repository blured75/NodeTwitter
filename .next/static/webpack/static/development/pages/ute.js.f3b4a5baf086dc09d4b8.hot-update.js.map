{"version":3,"file":"static/webpack/static/development/pages/ute.js.f3b4a5baf086dc09d4b8.hot-update.js","sources":["webpack:///./pages/ute.js"],"sourcesContent":["import React from 'react'\nimport Head from 'next/head'\nimport cowsay from 'cowsay-browser'\nimport Layout from '../components/MyLayout.js'\n\nclass Ute extends React.Component {\n    static async getInitialProps({ req }) {\n        console.log(\"getInitialProps de Ute\")\n        console.log(`${this.cyclicStringify(req)}`)\n        const userAgent = req ? req.headers['user-agent'] : navigator.userAgent;\n        return { userAgent };\n    }\n\n    render() {\n\n        return (\n            <Layout>\n                <div>\n                    <Head>\n                        <title>Et bien voilà ma fois c'est pratique nextJS ça permet de faire des sites moches</title>\n                        <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" />\n                    </Head>\n                    <img src=\"/static/cacajava.svg\"/>\n                    <pre>{cowsay.say({ text: `Ute est russe! et ton navigateur c est ${this.props.userAgent}` })}</pre>\n                </div>\n            </Layout>\n        )\n    }\n\n    /*static cyclicStringify(jsObject) {\n        // this will successfully serialize objects with cyclic\n        // references by supplying @name for an object already\n        // serialized instead of passing the actual object again,\n        // thus breaking the vicious circle\n        var alreadyVisited = [];\n        var serializedData = JSON.stringify(jsObject, function(key, value) {\n            \n            console.log()\n\n            if (value != null && typeof value == \"object\") {\n                if (alreadyVisited.indexOf(value.name) >= 0) {\n                    // do something other that putting the reference, like\n                    // putting some name that you can use to build the\n                    // reference again later, for eg.\n                    return \"@\" + value.name;\n                }\n                alreadyVisited.push(value.name);\n            }\n            return value;\n        });\n        // return modified, sanitized result\n        serializedData = JSON.stringify(JSON.parse(serializedData),null,2)\n\n        return serializedData\n    }*/\n}\n\nexport default Ute"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAQA;AAEA;AAKA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAIA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAvBA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;AANA;AACA;AAmDA;;;;A","sourceRoot":""}